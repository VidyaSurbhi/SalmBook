<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QK4RXhpZgAATU0AKgAAAAgACAEPAAIAAAAFAAAAbgEQAAIAAAAF
        AAAAdAESAAMAAAABAAEAAAExAAIAAAAmAAAAegEyAAIAAAAUAAAAoAITAAMAAAABAAEAAIdpAAQAAAAB
        AAAAtIglAAQAAAABAAACPAAAAABPUFBPAABBMzNmAABXaW5kb3dzIFBob3RvIEVkaXRvciAxMC4wLjEw
        MDExLjE2Mzg0ADIwMTk6MDk6MjggMTI6MjA6MzMAABaCmgAFAAAAAQAAAcKCnQAFAAAAAQAAAcqIJwAD
        AAAAAQFBAACQAAAHAAAABDAyMjCQAwACAAAAFAAAAdKQBAACAAAAFAAAAeaRAQAHAAAABAECAwCSAQAF
        AAAAAQAAAfqSAgAFAAAAAQAAAgKSCQADAAAAAQAQAACSCgAFAAAAAQAAAgqSfAAHAAAADgAAAhKSkQAC
        AAAAAzAwAACSkgACAAAAAzAwAACgAAAHAAAABDAxMDCgAQADAAAAAQABAACgAgAEAAAAAQAADMCgAwAE
        AAAAAQAACZCgBQAEAAAAAQAAAiCiFQAFAAAAAQAAAjSkBwADAAAAAQADAADqHQAJAAAAAQAAAAAAAAAA
        AAAAAQAAACEAAADIAAAAZDIwMTk6MDk6MjggMTI6MTA6MTcAMjAxOTowOToyOCAxMjoxMDoxNwAAABPC
        AAAD6AAAAMgAAABkAAALcgAAA+gIwwAAFCUAAAAIAAAA3QABAAIABwAAAAQwMTAwAAAAAAAAAAAAAAAA
        AAEAAwAHAAUAAAADAAACZgALAAIAAAAmAAACfgAdAAIAAAALAAACpAAAAAAAAAAGAAAAAQAAACgAAAAB
        AAAAEAAAAAFXaW5kb3dzIFBob3RvIEVkaXRvciAxMC4wLjEwMDExLjE2Mzg0ADIwMTk6MDk6MjgAAP/b
        AEMABAMDAwMCBAMDAwQEBAUGCgYGBQUGDAgJBwoODA8ODgwNDQ8RFhMPEBURDQ0TGhMVFxgZGRkPEhsd
        GxgdFhgZGP/bAEMBBAQEBgUGCwYGCxgQDRAYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgY
        GBgYGBgYGBgYGBgYGBgYGP/AABEIAMEAigMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQID
        BAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR
        8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp
        6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUE
        BAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3
        ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeo
        qaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/
        AONcyMp3OxJ65OajiL2/EUjrkbeCenpUh6kHtUZA9a/pN04vofzfFvYa7sy8uxz71GC4x83SnMBt9xQu
        dtPlRfQR3YtyxP40gYhs7iKDUbuFXOQAKfKi0r6EhcnuaPMI4zXH+IfiHoGgZjluPtFwP+WUWCR9fSvL
        9U+L3iC6uCbBYrWIHgY3Ej3zXiZjxDgMA+WtP3uy1Z72X8M43GrmjG0e70PoNZM8bqfk9c181f8AC0/F
        4bIvU/74Fdh4a+MryTJba/CBnA86Pp+IrjwvF2W4mapxnZvurHViuDMfRg5xSl5J6nsmSOhNMy5xjpUF
        nfQXtss8EqyRvyGU5qcYr6ZHysouDs1qOJOO9GTQR2oIIPWlYkXPFAJoxSrilYRNG7bhgnmvqzwxdsPA
        +jDLcWMHf/pmtfKcYIOa+l/DV2R4L0gE9LKH/wBFivl+JqfNTp+rOjBS5Zs+ZPrTT7U4k96Q47CvrDlQ
        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
</value>
  </data>
</root>